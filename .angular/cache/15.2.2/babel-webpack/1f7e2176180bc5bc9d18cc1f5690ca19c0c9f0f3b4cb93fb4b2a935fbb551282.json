{"ast":null,"code":"import { ModalController, NavParams } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@ionic/storage\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddDevicePage_ion_item_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 5)(1, \"ion-label\");\n    i0.ɵɵtext(2, \"Add to widget\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-toggle\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function AddDevicePage_ion_item_29_Template_ion_toggle_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.isWidget = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.isWidget);\n  }\n}\nfunction AddDevicePage_ion_item_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 5)(1, \"ion-label\", 8);\n    i0.ɵɵtext(2, \"On Event\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function AddDevicePage_ion_item_30_Template_ion_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onEvent = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.onEvent);\n  }\n}\nfunction AddDevicePage_ion_item_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 5)(1, \"ion-label\", 8);\n    i0.ɵɵtext(2, \"Off Event\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-input\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function AddDevicePage_ion_item_31_Template_ion_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.offEvent = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.offEvent);\n  }\n}\nfunction AddDevicePage_ion_item_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 5)(1, \"ion-label\", 8);\n    i0.ɵɵtext(2, \"Postfix\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-input\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function AddDevicePage_ion_item_32_Template_ion_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.postfix = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.postfix);\n  }\n}\nfunction AddDevicePage_ion_item_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 5)(1, \"ion-label\", 8);\n    i0.ɵɵtext(2, \"Prefix\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function AddDevicePage_ion_item_33_Template_ion_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.prefix = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.prefix);\n  }\n}\nfunction AddDevicePage_ion_item_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 5)(1, \"ion-label\", 8);\n    i0.ɵɵtext(2, \"Precision\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function AddDevicePage_ion_item_34_Template_ion_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.precision = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.precision);\n  }\n}\nexport let AddDevicePage = /*#__PURE__*/(() => {\n  class AddDevicePage {\n    constructor(modalCtrl, navParams, storage) {\n      this.modalCtrl = modalCtrl;\n      this.navParams = navParams;\n      this.storage = storage;\n      this.isWidget = false;\n      this.room = navParams.get('roomData');\n    }\n    ngOnInit() {}\n    dismiss() {\n      // using the injected ModalController this page\n      // can \"dismiss\" itself and optionally pass back data\n      this.modalCtrl.dismiss({\n        'dismissed': true\n      });\n    }\n    typeChange(ev) {\n      switch (this.deviceType) {\n        case \"text\":\n          this.deviceImage = \"text\";\n          this.isSensor = false;\n          this.isSwitch = false;\n          break;\n        case \"switch\":\n          this.deviceImage = \"switch\";\n          this.isText = false;\n          this.isSensor = false;\n          this.isSwitch = true;\n          break;\n        case \"sensor\":\n          this.deviceImage = \"eye\";\n          this.isText = false;\n          this.isSensor = true;\n          this.isSwitch = false;\n          this.storage.get(\"widgets\").then(val => {\n            if (val) {\n              if (val.length > 3) {\n                this.isText = false;\n              } else {\n                this.isText = true;\n              }\n            } else {\n              this.isText = true;\n            }\n          });\n          break;\n        default:\n          break;\n      }\n    }\n    generateHexString(length) {\n      var ret = \"\";\n      while (ret.length < length) {\n        ret += Math.random().toString(16).substring(2);\n      }\n      return ret.substring(0, length);\n    }\n    addDevice() {\n      let id = this.generateHexString(10);\n      if (this.deviceName && this.deviceType && this.topic) {\n        this.storage.get(\"rooms\").then(val => {\n          val.forEach((element, i) => {\n            if (element.id == this.room.id) {\n              val[i].devices.push({\n                deviceName: this.deviceName,\n                deviceType: this.deviceType,\n                deviceTopic: this.topic,\n                deviceImage: this.deviceImage,\n                deviceId: id,\n                onEvent: this.onEvent,\n                offEvent: this.offEvent,\n                prefix: this.prefix,\n                postfix: this.postfix,\n                precision: this.precision\n              });\n            }\n          });\n          this.storage.set(\"rooms\", val);\n        });\n        if (this.isWidget == true) {\n          this.storage.get(\"widgets\").then(val => {\n            if (val) {\n              val.push({\n                id: this.generateHexString(10),\n                name: this.deviceName,\n                value: this.topic,\n                prefix: this.prefix,\n                postfix: this.postfix,\n                precision: this.precision\n              });\n              this.storage.set(\"widgets\", val);\n            } else {\n              let widget = [{\n                id: this.generateHexString(10),\n                name: this.deviceName,\n                value: this.topic,\n                prefix: this.prefix,\n                postfix: this.postfix,\n                precision: this.precision\n              }];\n              this.storage.set(\"widgets\", widget);\n            }\n          });\n        }\n        setTimeout(() => {\n          this.dismiss();\n        }, 100);\n      } else {\n        console.log(\"asda\");\n      }\n    }\n    setWidget() {}\n  }\n  AddDevicePage.ɵfac = function AddDevicePage_Factory(t) {\n    return new (t || AddDevicePage)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i1.NavParams), i0.ɵɵdirectiveInject(i2.Storage));\n  };\n  AddDevicePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddDevicePage,\n    selectors: [[\"app-add-device\"]],\n    decls: 37,\n    vars: 9,\n    consts: [[\"mode\", \"ios\"], [\"mode\", \"ios\", \"mode\", \"ios\", \"color\", \"primary\", 1, \"first-toolbar\"], [\"slot\", \"primary\"], [3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"close\"], [\"color\", \"light\"], [1, \"grid-content\", \"ion-no-padding\"], [\"color\", \"tint\", \"mode\", \"ios\", 1, \"homeCard\", \"ion-no-margin\"], [\"position\", \"stacked\"], [\"required\", \"true\", \"placeholder\", \"Please enter your device name\", \"name\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"required\", \"true\", \"placeholder\", \"Please enter topic\", \"name\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"mode\", \"ios\", \"placeholder\", \"Please select type\", \"okText\", \"Okay\", \"cancelText\", \"Dismiss\", \"interface\", \"popover\", 3, \"ngModel\", \"ngModelChange\", \"ionChange\"], [\"value\", \"text\"], [\"value\", \"switch\"], [\"value\", \"sensor\"], [\"color\", \"light\", 4, \"ngIf\"], [\"shape\", \"round\", \"expand\", \"block\", 1, \"ion-margin-top\", 3, \"click\"], [3, \"ngModel\", \"ngModelChange\"], [\"required\", \"true\", \"placeholder\", \"Please enter on event\", \"name\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"required\", \"true\", \"placeholder\", \"Please enter off Event\", \"name\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"required\", \"true\", \"placeholder\", \"Please enter prefix value\", \"name\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"required\", \"true\", \"placeholder\", \"Please enter precision value\", \"name\", \"number\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function AddDevicePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\", 1)(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Add Device\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-buttons\", 2)(5, \"ion-button\", 3);\n        i0.ɵɵlistener(\"click\", function AddDevicePage_Template_ion_button_click_5_listener() {\n          return ctx.dismiss();\n        });\n        i0.ɵɵelement(6, \"ion-icon\", 4);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(7, \"ion-content\", 5)(8, \"ion-list\", 6)(9, \"ion-card\", 7)(10, \"ion-card-content\")(11, \"ion-item\", 5)(12, \"ion-label\", 8);\n        i0.ɵɵtext(13, \"Device Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AddDevicePage_Template_ion_input_ngModelChange_14_listener($event) {\n          return ctx.deviceName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"ion-item\", 5)(16, \"ion-label\", 8);\n        i0.ɵɵtext(17, \"Topic\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"ion-input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function AddDevicePage_Template_ion_input_ngModelChange_18_listener($event) {\n          return ctx.topic = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"ion-item\", 5)(20, \"ion-label\");\n        i0.ɵɵtext(21, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"ion-select\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function AddDevicePage_Template_ion_select_ngModelChange_22_listener($event) {\n          return ctx.deviceType = $event;\n        })(\"ionChange\", function AddDevicePage_Template_ion_select_ionChange_22_listener($event) {\n          return ctx.typeChange($event);\n        });\n        i0.ɵɵelementStart(23, \"ion-select-option\", 12);\n        i0.ɵɵtext(24, \"Text\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"ion-select-option\", 13);\n        i0.ɵɵtext(26, \"Switch\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"ion-select-option\", 14);\n        i0.ɵɵtext(28, \"Sensor\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(29, AddDevicePage_ion_item_29_Template, 4, 1, \"ion-item\", 15);\n        i0.ɵɵtemplate(30, AddDevicePage_ion_item_30_Template, 4, 1, \"ion-item\", 15);\n        i0.ɵɵtemplate(31, AddDevicePage_ion_item_31_Template, 4, 1, \"ion-item\", 15);\n        i0.ɵɵtemplate(32, AddDevicePage_ion_item_32_Template, 4, 1, \"ion-item\", 15);\n        i0.ɵɵtemplate(33, AddDevicePage_ion_item_33_Template, 4, 1, \"ion-item\", 15);\n        i0.ɵɵtemplate(34, AddDevicePage_ion_item_34_Template, 4, 1, \"ion-item\", 15);\n        i0.ɵɵelementStart(35, \"ion-button\", 16);\n        i0.ɵɵlistener(\"click\", function AddDevicePage_Template_ion_button_click_35_listener() {\n          return ctx.addDevice();\n        });\n        i0.ɵɵtext(36, \"Add\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.deviceName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.topic);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.deviceType);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.isText);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSwitch);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSwitch);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSensor);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSensor);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSensor);\n      }\n    },\n    dependencies: [i3.NgIf, i4.NgControlStatus, i4.RequiredValidator, i4.NgModel, i1.IonButton, i1.IonButtons, i1.IonCard, i1.IonCardContent, i1.IonContent, i1.IonHeader, i1.IonIcon, i1.IonInput, i1.IonItem, i1.IonLabel, i1.IonList, i1.IonSelect, i1.IonSelectOption, i1.IonTitle, i1.IonToggle, i1.IonToolbar, i1.BooleanValueAccessor, i1.SelectValueAccessor, i1.TextValueAccessor],\n    styles: [\"ion-header[_ngcontent-%COMP%]   .first-toolbar[_ngcontent-%COMP%]{padding-top:36px;padding-bottom:72px}ion-header[_ngcontent-%COMP%]{position:absolute;z-index:1}.grid-content[_ngcontent-%COMP%]{z-index:999;display:block;position:relative;transform:translateY(110px);background:#fff;border-top-left-radius:50px;border-top-right-radius:50px}\"]\n  });\n  return AddDevicePage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}